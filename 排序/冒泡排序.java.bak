package q;

public class BubbleSort {  
    
	 public void BubbleSort1(int a[], int n) {
		int i, j, temp;
		for (i = 0; i < n; i++)
			for (j = 1; j < n - i; j++)
				if (a[j - 1] > a[j]) {
					temp = a[j - 1];
					a[j - 1] = a[j];
					a[j] = temp;
				}
	}

	// 设置一个标志，如果这一趟发生了交换，则为true，否则为false。明显如果有一趟没有发生交换，说明排序已经完成
	public void BubbleSort2(int a[], int n) {
		int j, k, temp;
		boolean flag;
		k = n;
		flag = true;
		while (flag) {
			flag = false;
			for (j = 1; j < k; j++)
				if (a[j - 1] > a[j]) {
					temp = a[j - 1];
					a[j - 1] = a[j];
					a[j] = temp;
					flag = true;
				}
			k--;
		}
	}
    //记录某次遍历时最后发生数据交换的位置，这个位置之后的数据显然已经有序了。因此通过记录最后发生数据交换的位置就可以确定下次循环的范围了。
	public void BubbleSort3(int a[], int n) {
		int j, k, temp;
		int flag;
		flag = n;
		while (flag > 0) {
			k = flag;
			flag = 0;
			for (j = 1; j < k; j++)
				if (a[j - 1] > a[j]) {
					temp = a[j - 1];
					a[j - 1] = a[j];
					a[j] = temp;
					flag = j;
				}
		}
	}